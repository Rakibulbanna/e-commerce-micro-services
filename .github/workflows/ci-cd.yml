name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [notification-service, auth-service, order-service, payment-service]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          cd packages/${{ matrix.service }}
          npm ci

      - name: Run tests
        run: |
          cd packages/${{ matrix.service }}
          npm test

      - name: Run linting
        run: |
          cd packages/${{ matrix.service }}
          npm run lint

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push notification-service
        uses: docker/build-push-action@v2
        with:
          context: ./packages/notification-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/notification-service:latest

      - name: Build and push auth-service
        uses: docker/build-push-action@v2
        with:
          context: ./packages/auth-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/auth-service:latest

      - name: Build and push order-service
        uses: docker/build-push-action@v2
        with:
          context: ./packages/order-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/order-service:latest

      - name: Build and push payment-service
        uses: docker/build-push-action@v2
        with:
          context: ./packages/payment-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/payment-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /home/banna/microservices/e-commerce
            docker-compose pull
            docker-compose up -d
