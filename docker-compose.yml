version: '3.8'

services:
  # API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - auth-service
      - product-service
      - order-service
      - notification-service
      - payment-service
    networks:
      - ecommerce-network

  # Auth Service
  auth-service:
    build:
      context: ./packages/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@auth-db:5432/auth_db?schema=public
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key
    depends_on:
      - auth-db
      - redis
    networks:
      - ecommerce-network

  # Product Service
  product-service:
    build:
      context: ./packages/product-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:postgres@product-db:5432/product_db?schema=public
      - REDIS_URL=redis://redis:6379
    depends_on:
      - product-db
      - redis
    networks:
      - ecommerce-network

  # Order Service
  order-service:
    build:
      context: ./packages/order-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:postgres@order-db:5432/order_db?schema=public
      - RABBITMQ_URL=amqp://rabbitmq
      - REDIS_URL=redis://redis:6379
    depends_on:
      - order-db
      - rabbitmq
      - redis
    networks:
      - ecommerce-network

  # Notification Service
  notification-service:
    build:
      context: ./packages/notification-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:postgres@notification-db:5432/notification_db?schema=public
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - notification-db
      - rabbitmq
    networks:
      - ecommerce-network

  # Payment Service
  payment-service:
    build:
      context: ./packages/payment-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://postgres:postgres@payment-db:5432/payment_db?schema=public
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - payment-db
      - rabbitmq
    networks:
      - ecommerce-network

  # Databases
  auth-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  product-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=product_db
    volumes:
      - product-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  order-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order_db
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  notification-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=notification_db
    volumes:
      - notification-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  payment-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=payment_db
    volumes:
      - payment-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - ecommerce-network

  # Cache
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - ecommerce-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - ecommerce-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  auth-db-data:
  product-db-data:
  order-db-data:
  notification-db-data:
  payment-db-data:
  prometheus-data:
  grafana-data: 